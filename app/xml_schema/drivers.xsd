<?xml version="1.0" encoding="UTF-8" ?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">

<xsd:include schemaLocation="variable.xsd"/>

<xsd:element name="driver-info" abstract="true"/>

<xsd:element name="duration" substitutionGroup="driver-info">
  <xsd:complexType>
    <xsd:attribute name="timestep" type="xsd:double" use="required"/>
    <xsd:attribute name="number-of-steps" type="xsd:nonNegativeInteger" use="required"/>
  </xsd:complexType>
</xsd:element>

<xsd:element name="driver-placeholder" substitutionGroup="driver-info">
  <xsd:complexType>
    <xsd:attribute name="drivers-defined-externally" type="xsd:boolean" fixed="true"/>
  </xsd:complexType>
</xsd:element>

<xsd:element name="drivers" substitutionGroup="driver-info">
  <xsd:complexType>
    <xsd:sequence>
      <xsd:annotation>
        <xsd:documentation>
          A drivers element may contain an unlimited number of rows
          but must contain at least one.
        </xsd:documentation>
      </xsd:annotation>
      <xsd:element name="row" type="non-empty-variable-settings" maxOccurs="unbounded">
        <xsd:unique name="driver-variable-names">
          <xsd:annotation>
            <xsd:documentation>
              Within each driver row, no variable should appear more
              than once.

              If schema validation is turned off, this is enforced at
              the program level, but at a later stage.  The program
              also ensures that variables in the parameters or initial
              state are distinct from those in the driver rows,
              something that can't easily be enforced by XML schema.

              Each row in a drivers element should contain the same
              set of variables, but again, this is enforced at the
              program level and not by this schema.
            </xsd:documentation>
          </xsd:annotation>
          <xsd:selector xpath="variable"/>
          <xsd:field xpath="@name"/>
        </xsd:unique>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="timestep" type="xsd:double" use="required"/>
  </xsd:complexType>
</xsd:element>

</xsd:schema>
